/*
 * HARService: Activity Recognition Service
 * Copyright (C) 2015 agimenez
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *            http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.hardroid.common;

import android.os.Parcel;
import android.os.Parcelable;

import org.hardroid.client.ActivityRecognitionManager;

/**
 * A data class representing a Human Activity.
 *
 * A human activity consist of a type and a confidence level.
 *
 * All activities generated by {@link ActivityRecognitionManager}
 * are guaranteed to have a valid type and confidence.
 */
public class HumanActivity implements Parcelable {

    public static final HumanActivityCreator CREATOR = new HumanActivityCreator();

    /**
     * Constant enum Type used to specify the activity recognized
     */
    public static enum Type {
        UNKNOWN, STILL, WALKING, RUNNING, IN_VEHICLE, ON_BICYCLE, TILTING

    }
    private Type type;
    private int confidence;

    /**
     * Constructs a Human Activity
     */
    public HumanActivity() {

    }

    /**
     * Constructs a Human Activity with custom parameters
     *
     * @param activityType Activity type
     * @param confidence Confidence level
     */
    public HumanActivity(Type activityType, int confidence) {
        this.type = activityType;
        this.confidence = confidence;
    }

    /**
     * Returns the confidence level of an predicted activity
     *
     * @return Confidence level
     */
    public int getConfidence() {

        return this.confidence;
    }

    /**
     * Returns the predicted activity type
     *
     * @return Activity type
     */
    public Type getType(){
        return type;
    }

    @Override
    public int describeContents() {
        return 0;
    }

    @Override
    public void writeToParcel(Parcel parcel, int flags) {
        parcel.writeInt(this.type.ordinal());
        parcel.writeInt(this.confidence);
    }

    @Override
    public String toString() {
        return "DetectedActivity [type="+ this.getType() + ", confidence=" + this.getConfidence() + "]";
    }
}
