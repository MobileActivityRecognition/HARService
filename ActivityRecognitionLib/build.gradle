apply plugin: 'com.android.library'
apply plugin: 'maven'

def groupId = PUBLISH_GROUP_ID
def artifactId = PUBLISH_ARTIFACT_ID
def version = PUBLISH_VERSION
def localReleaseDest = "${buildDir}/release/"

android {
    compileSdkVersion ANDROID_SDK_VERSION
    buildToolsVersion ANDROID_BUILD_TOOLS

    defaultConfig {
        minSdkVersion 10
        archivesBaseName = "hardroidlib"
        targetSdkVersion ANDROID_SDK_VERSION
        versionCode VERSION_CODE
        versionName PUBLISH_VERSION
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
}

def pomConfig = {
    name 'HARDroid Project'
    description """
    HARDroid is a open implementation of an activity recognition library
  """
    url 'https://hardroidpy.github.io'
    inceptionYear '2015'
    issueManagement {
        system 'GitHub'
        url 'https://github.com/hardroidpy/harservice/issues'
    }
    scm {
        url "https://github.com/hardroidpy/harservice/"
        connection "scm:git:https://github.com/hardroidpy/HARService.git"
        developerConnection "scm:git:git@github.com:hardroidpy/HARService.git"
    }
    licenses {
        license {
            name 'Apache License, Version 2.0'
            url 'http://www.apache.org/licenses/LICENSE-2.0'
            comments 'See license description for more details.'
            distribution 'repo'
        }
    }
    developers {
        developer {
            name 'Alberto G.'
            email 'alberto.gimenez@pykoder.com'
        }
    }
}

task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

task androidJavadocs(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    failOnError false
}

task assembleJar(type: Jar) {
    baseName = "hardroidlib"
    from "$buildDir/intermediates/classes/release/"
}

uploadArchives {
    repositories.mavenDeployer {
        pom.groupId = groupId
        pom.artifactId = artifactId
        pom.version = version
        pom.project pomConfig
        repository(url: "file://${localReleaseDest}")
    }
}

task zipRelease(type: Zip) {
    from localReleaseDest
    destinationDir buildDir
    archiveName "release-${version}.zip"
}

task generateRelease << {
    println "Release ${version} can be found at ${localReleaseDest}/"
    println "Release ${version} zipped can be found ${buildDir}/release-${version}.zip"
}

generateRelease.dependsOn(uploadArchives)
generateRelease.dependsOn(zipRelease)
generateRelease.dependsOn(androidJavadocs)

build.finalizedBy(generateRelease)

artifacts {
    //archives androidSourcesJar
    archives assembleJar
}
