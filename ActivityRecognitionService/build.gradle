/*
 * HARService: Activity Recognition Service
 * Copyright (C) 2015 agimenez
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *          http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'


android {
    compileSdkVersion ANDROID_SDK_VERSION
    buildToolsVersion ANDROID_BUILD_TOOLS

    defaultConfig {
        applicationId "org.hardroid.server"
        archivesBaseName = "HARDroid"
        minSdkVersion 14
        targetSdkVersion ANDROID_SDK_VERSION
        versionCode VERSION_CODE
        versionName PUBLISH_VERSION
    }
    lintOptions {
        abortOnError false
    }

    signingConfigs {
        release {
            storeFile file(KEYSTORE_FILE)
            storePassword KEYSTORE_PASS
            keyAlias KEYSTORE_ALIAS
            keyPassword KEYSTORE_PASS
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def file = output.outputFile
                    output.outputFile = new File(file.parent, file.name.replace(".apk", "-" + defaultConfig.versionName + ".apk"))
                }
            }
            signingConfig signingConfigs.release
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    // Dependencies for grab and run
    //compile libraries.android_support
    //compile libraries.guava

    compile libraries.grab_n_run
    compile libraries.commons_math
    compile libraries.hardroidlib
    compile(libraries.crashlytics) {
        transitive = true;
    }
}
